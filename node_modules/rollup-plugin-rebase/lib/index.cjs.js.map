{"version":3,"file":"index.cjs.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-disable filenames/match-exported */\nimport path from \"path\"\nimport fs from \"fs-extra\"\nimport postcss from \"postcss\"\nimport postcssImport from \"postcss-import\"\nimport postcssSass from \"postcss-sass\"\nimport postcssScss from \"postcss-scss\"\nimport postcssSmartAsset from \"postcss-smart-asset\"\nimport postcssSugarSS from \"sugarss\"\n\nimport { createFilter } from \"rollup-pluginutils\"\nimport { getHash } from \"asset-hash\"\n\nconst defaultExclude = [\n  /\\.json$/,\n  /\\.mjs$/,\n  /\\.js$/,\n  /\\.jsx$/,\n  /\\.es$/,\n  /\\.esx$/,\n  /\\.ts$/,\n  /\\.tsx$/,\n  /\\.vue$/\n]\n\nconst styleParser = {\n  \".pcss\": null,\n  \".css\": null,\n  \".sss\": postcssSugarSS,\n  \".scss\": postcssScss,\n  \".sass\": postcssSass\n}\n\nfunction getPostCssPlugins(keepName) {\n  return [\n    postcssImport(),\n    postcssSmartAsset({\n      url: \"copy\",\n      useHash: true,\n      keepName\n    })\n  ]\n}\n\n/* eslint-disable max-params */\nasync function processStyle(id, fileDest, keepName) {\n  const content = await fs.readFile(id)\n  const parser = styleParser[path.extname(id)]\n  const processor = postcss(getPostCssPlugins(keepName))\n  const text = content.toString()\n\n  const result = await processor.process(text, {\n    from: id,\n    to: fileDest,\n    extensions: Object.keys(styleParser),\n    map: { inline: false },\n\n    // Always uses parser... even for scss as we like to offer \"normal\" CSS in deployed files.\n    parser\n  })\n\n  await fs.outputFile(fileDest, result.css)\n  await fs.outputFile(fileDest + \".map\", result.map)\n}\n\nexport default function rebase(options = {}) {\n  const { include, exclude = defaultExclude, verbose = false, keepName = false, folder = \"\" } = options\n\n  const filter = createFilter(include, exclude)\n  const wrappers = {}\n  const assets = {}\n  const files = {}\n\n  return {\n    name: \"rollup-plugin-rebase\",\n\n    /* eslint-disable complexity, max-statements */\n    async resolveId(importee, importer) {\n      if (!filter(importee)) {\n        return null\n      }\n\n      // Ignore root files which are typically script files. Delegate to other\n      // plugins or default behavior.\n      if (!importer) {\n        return null\n      }\n\n      // If we process an import request of an already processed asset\n      // we deal with it to exclude it from any further bundling through Rollup.\n      if (assets[importee] != null) {\n        return false\n      }\n\n      // We do not process files which do not have a file extensions,\n      // cause all assets typically have one. By returning `null` we delegate\n      // the resolver to other plugins.\n      const fileExt = path.extname(importee)\n      if (fileExt === \"\") {\n        return null\n      }\n\n      const fileSource = path.resolve(path.dirname(importer), importee)\n      const fileName = path.basename(importee, fileExt)\n      const fileHash = await getHash(fileSource)\n      const fileTarget = keepName ? `${fileName}_${fileHash}${fileExt}` : `${fileHash}${fileExt}`\n\n      // Registering for our copying job when the bundle is created (kind of a job queue)\n      // and respect any sub folder given by the configuration options.\n      files[fileSource] = path.join(folder, fileTarget)\n\n      // Replacing slashes for Windows, as we need to use POSIX style to be compat\n      // to Rollup imports / NodeJS resolve implementation.\n      const assetId = path.join(path.dirname(importer), folder, fileTarget).replace(/\\\\/g, \"/\")\n      const resolvedId = `${assetId}.js`\n\n      // Register asset for exclusion handling in this function.\n      // We need the additonal wrapping to be able to not just exclude the file\n      // but to combine it with tweaking the import location. This indirection\n      // makes this possible as we benefit from having a two-phase resolve.\n      assets[assetId] = true\n\n      // Store data for our dynamic wrapper generator in `load()`. This uses the\n      // `assetId` to refer to our asset in its virtual new location which is\n      // relative to the importer. This is enough to tweak the import statements\n      // and make them flat and relative as desired in our output scenario.\n      wrappers[resolvedId] = assetId\n\n      return resolvedId\n    },\n\n    load(id) {\n      if (wrappers[id] != null) {\n        // It's not really any loader but kind of a dynamic code generator\n        // which is just referring back to the asset we are interested in.\n        // This is the magic behind the two-step-resolver and makes it possible\n        // to have both: tweaked import references and externals together.\n        const importee = wrappers[id]\n        return `export { default } from \"${importee}\";`\n      }\n\n      return null\n    },\n\n    async generateBundle({ file }) {\n      const outputFolder = path.dirname(file)\n\n      try {\n        // Copy all assets in parallel and waiting for it to complete.\n        await Promise.all(\n          Object.keys(files).map(async (fileSource) => {\n            const fileDest = path.join(outputFolder, files[fileSource])\n            const fileExt = path.extname(fileSource)\n\n            // Style related files are processed, not just copied, so that\n            // we can handle internal references in CSS as well.\n            if (fileExt in styleParser) {\n              if (verbose) {\n                console.log(`Processing ${fileSource} => ${fileDest}...`)\n              }\n\n              await processStyle(fileSource, fileDest, keepName)\n            } else {\n              if (verbose) {\n                console.log(`Copying ${fileSource} => ${fileDest}...`)\n              }\n\n              await fs.copy(fileSource, fileDest)\n            }\n          })\n        )\n      } catch(error) {\n        throw new Error(\"Error while copying files:\", error)\n      }\n    }\n  }\n}\n"],"names":["defaultExclude","styleParser","postcssSugarSS","postcssScss","postcssSass","getPostCssPlugins","keepName","postcssImport","postcssSmartAsset","url","useHash","processStyle","id","fileDest","fs","readFile","content","parser","path","extname","processor","postcss","text","toString","process","from","to","extensions","Object","keys","map","inline","result","outputFile","css","rebase","options","include","exclude","verbose","folder","filter","createFilter","wrappers","assets","files","name","resolveId","importee","importer","fileExt","fileSource","resolve","dirname","fileName","basename","getHash","fileHash","fileTarget","join","assetId","replace","resolvedId","load","generateBundle","file","outputFolder","error","Error","Promise","all","console","log","call","bind","copy"],"mappings":"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"}