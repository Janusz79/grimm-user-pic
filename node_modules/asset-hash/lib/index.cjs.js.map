{"version":3,"file":"index.cjs.js","sources":["../src/index.js"],"sourcesContent":["import { createHash } from \"crypto\"\nimport { createReadStream } from \"fs\"\nimport { extname } from \"path\"\nimport BigInt from \"big.js\"\nimport { MetroHash128, MetroHash64 } from \"metrohash\"\nimport { default as XXHash32, XXHash64 } from \"xxhash\"\n\nconst DEFAULT_HASH = \"metrohash128\"\nconst DEFAULT_ENCODING = \"base52\"\nconst DEFAULT_MAX_LENGTH = 8\n\nconst XXHASH_CONSTRUCT = 0xcafebabe\n\nconst baseEncodeTables = {\n  26: \"abcdefghijklmnopqrstuvwxyz\",\n  32: \"123456789abcdefghjkmnpqrstuvwxyz\", // no 0lio\n  36: \"0123456789abcdefghijklmnopqrstuvwxyz\",\n  49: \"abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\", // no lIO\n  52: \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n  58: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\", // no 0lIO\n  62: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n  64: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\"\n}\n\nexport function baseEncode(buffer, base) {\n  const baseNum = typeof base === \"number\" ? base : (/[0-9]+/).exec(base)[0]\n  const encodeTable = baseEncodeTables[baseNum]\n  if (!encodeTable) {\n    throw new Error(`Unknown base encoding ${base}!`)\n  }\n\n  const length = buffer.length\n\n  BigInt.DP = 0\n  BigInt.RM = 0\n\n  let current = new BigInt(0)\n  for (let i = length - 1; i >= 0; i--) {\n    current = current.times(256).plus(buffer[i])\n  }\n\n  let output = \"\"\n  while (current.gt(0)) {\n    output = encodeTable[current.mod(baseNum)] + output\n    current = current.div(baseNum)\n  }\n\n  BigInt.DP = 20\n  BigInt.RM = 1\n\n  return output\n}\n\nfunction computeDigest(bufferOrString, { encoding, maxLength } = {}) {\n  let output = \"\"\n\n  const isString = typeof bufferOrString === \"string\"\n\n  if (isString && encoding === \"hex\") {\n    output = bufferOrString\n  } else {\n    const buffer = isString ?\n      Buffer.from(bufferOrString, \"hex\") :\n      bufferOrString\n\n    if (encoding === \"hex\" || encoding === \"base64\" || encoding === \"utf8\") {\n      output = buffer.toString(encoding)\n    } else {\n      output = baseEncode(buffer, encoding)\n    }\n  }\n\n  return maxLength == null || output.length <= maxLength ?\n    output :\n    output.slice(0, maxLength)\n}\n\nexport class Hasher {\n  constructor(options = {}) {\n    this._hasher = createHasher(options.hash || DEFAULT_HASH)\n    this._encoding = options.encoding || DEFAULT_ENCODING\n    this._maxLength = options.maxLength || DEFAULT_MAX_LENGTH\n  }\n\n  update(data) {\n    const buffer =\n      data instanceof Buffer ? data : Buffer.from(data.toString(), \"utf-8\")\n    return this._hasher.update(buffer)\n  }\n\n  digest(encoding, maxLength) {\n    return computeDigest(this._hasher.digest(\"buffer\"), {\n      encoding: encoding || this._encoding,\n      maxLength: maxLength || this._maxLength\n    })\n  }\n}\n\nexport function createHasher(hash) {\n  let hasher\n\n  if (hash === \"xxhash32\") {\n    hasher = new XXHash32(XXHASH_CONSTRUCT)\n  } else if (hash === \"xxhash64\") {\n    hasher = new XXHash64(XXHASH_CONSTRUCT)\n  } else if (hash === \"metrohash64\") {\n    hasher = new MetroHash64()\n  } else if (hash === \"metrohash128\") {\n    hasher = new MetroHash128()\n  } else {\n    hasher = createHash(hash)\n  }\n\n  return hasher\n}\n\nexport function getHash(fileName, options) {\n  const { hash, encoding, maxLength } = options || {}\n  return new Promise((resolve, reject) => {\n    try {\n      const hasher = createHasher(hash || DEFAULT_HASH)\n\n      createReadStream(fileName)\n        .on(\"data\", (data) => {\n          hasher.update(data)\n        })\n        .on(\"error\", (error) => {\n          reject(error)\n        })\n        .on(\"end\", () => {\n          try {\n            const digest = computeDigest(hasher.digest(\"buffer\"), {\n              encoding: encoding || DEFAULT_ENCODING,\n              maxLength: maxLength || DEFAULT_MAX_LENGTH\n            })\n\n            resolve(digest)\n          } catch (error) {\n            reject(error)\n          }\n        })\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n\nexport async function getHashedName(fileName, options) {\n  const hashed = await getHash(fileName, options)\n  const extension = extname(fileName)\n\n  return hashed + extension\n}\n"],"names":["DEFAULT_HASH","DEFAULT_ENCODING","DEFAULT_MAX_LENGTH","XXHASH_CONSTRUCT","baseEncodeTables","baseEncode","buffer","base","baseNum","exec","encodeTable","Error","length","BigInt","DP","RM","current","i","times","plus","output","gt","mod","div","computeDigest","bufferOrString","encoding","maxLength","isString","Buffer","from","toString","slice","Hasher","options","_hasher","createHasher","hash","_encoding","_maxLength","update","data","digest","hasher","XXHash32","XXHash64","MetroHash64","MetroHash128","createHash","getHash","fileName","Promise","resolve","reject","createReadStream","on","error","getHashedName","hashed","extension","extname"],"mappings":"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"}